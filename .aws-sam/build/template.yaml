AWSTemplateFormatVersion: 2010-09-09
Description: An application for sending events to a webhook.
Transform:
- AWS::Serverless-2016-10-31
Metadata:
  AWS::ServerlessRepo::Application:
    Name: thetis-ims-webhook
    Description: An application for sending events as webhook calls
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: ../../LICENSE.txt
    ReadmeUrl: ../../README.md
    Labels:
    - thetis-ims
    HomePageUrl: https://github.com/thetis-apps/Webhook
    SemanticVersion: 1.1.11
    SourceCodeUrl: https://github.com/thetis-apps/Webhook
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs16.x
Parameters:
  ContextId:
    Type: String
    Description: Only bridge events regarding context with this id.
    MinLength: '1'
  ClientId:
    Description: Key of the parameter that has your Thetis client id as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientId
  ClientSecret:
    Description: Key of the parameter that has your Thetis client secret as its value.
    Type: AWS::SSM::Parameter::Value<String>
    Default: ThetisClientSecret
  ApiKey:
    Description: The api key that gives access to the context in Thetis IMS.
    Type: String
    MinLength: 1
  DevOpsEmail:
    Description: The email address to send mail to when messages in the dead letter
      queue.
    Type: String
    MinLength: 4
Resources:
  EventQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - DeadLetterQueue
          - Arn
        maxReceiveCount: 144
      VisibilityTimeout: 300
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - public.thetis-ims.com
        detail:
          contextId:
          - Ref: ContextId
      Targets:
      - Id: Target
        Arn:
          Fn::GetAtt:
          - EventQueue
          - Arn
        SqsParameters:
          MessageGroupId: SINGLETON
  EventPermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: EventQueue
      PolicyDocument:
        Statement:
        - Action: SQS:SendMessage
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - EventQueue
            - Arn
          Principal:
            Service: events.amazonaws.com
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handler.eventHandler
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
          ContextId:
            Ref: ContextId
      Events:
        EventQueued:
          Type: SQS
          Properties:
            BatchSize: 1
            Enabled: true
            Queue:
              Fn::GetAtt:
              - EventQueue
              - Arn
      CodeUri: Function
    Metadata:
      SamResourceId: Function
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
